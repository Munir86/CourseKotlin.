//التحكم بالعبارات التكرارية LoopControl

fun main(args: Array<String>) {
// هذا loop اعتيادي

 /*
    for(count in 1..10){


        println("count:$count")

    }
*/

    // لسبب اردت الخروج من ال loop عند رقم معين ولنفترض بانه الرقم 5 المثال التالي
// في المثال هنال نطلب الخروج من عند 5 باضافة كلمة break
    // عندما يصل الى العد المطلوب فيخرج من الليستة او القائمة باكملها
    /*
    for(count in 1..10){


        println("count:$count")
        if (count==5){
            break
        }

    }
*/

    /*
    في مثال اخر يوجد لدينا continue على سبيل المثال لا اريد طباعة شئ معين فاضع الكلمة كما في المثال التالي
     */
// الفرق بين ال break و ال continue ال break يخرج منها اما ال continue يقوم باكمال الكود مع اهمال الحالة اوعدم
//   طباعة الكلمة
// التي يتم تحديدها كما في مثالنا هذا


    /*
    for(count in 1..10){

        if (count==5){
            continue
        }
        println("count:$count")

    }

*/

    /*
    في اللغات الاخرى عندما كان لدينا loop داخل loop وكنا نريد  الخروج من
    منها فكان يجب عليك ان تكتب كلمة break مرتين وهل الامر جدا مزعج
 نلاحظ في المثال للخروج عندما يصل لل  break يخرج من المطلوب ويكمل العداد
     */
/*
    loop@ for(count in 1..10){

        for (count2 in 1..3){
            println("count:$count")
            if (count==3){
                break
            }
        }


    }

*/

    /*
    ماذا لو قلت انا عندما يصل الى ال break اريد الخروج من العداد بشكل نهائي هنا اداة جملية جدا(@loop) تفيدنا انه
    يعطي الامر بالخروج من الكل كما في المثال التالي
     */
// ملاحظة كلمة @loop هذه الكلمة غير ثابتةبمعنى انها local مثلا فيك تحط @neon القصد منها ان @ فقط ثابت في هذه الاداه
    loop@ for(count in 1..10){

        for (count2 in 1..3){
            println("count:$count")
            if (count==3){
                break@loop
            }
        }


    }


    println("END APP")

}